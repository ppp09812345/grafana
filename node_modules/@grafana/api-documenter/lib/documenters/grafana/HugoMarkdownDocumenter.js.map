{"version":3,"file":"HugoMarkdownDocumenter.js","sourceRoot":"","sources":["../../../src/documenters/grafana/HugoMarkdownDocumenter.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\r\n\r\nimport {\r\n  PackageName,\r\n  FileSystem,\r\n  NewlineKind\r\n} from '@microsoft/node-core-library';\r\nimport {\r\n  DocSection,\r\n  DocPlainText,\r\n  DocLinkTag,\r\n  TSDocConfiguration,\r\n  StringBuilder,\r\n  DocNodeKind,\r\n  DocParagraph,\r\n  DocCodeSpan,\r\n  StandardTags,\r\n  DocBlock,\r\n  DocComment\r\n} from '@microsoft/tsdoc';\r\nimport {\r\n  ApiModel,\r\n  ApiItem,\r\n  ApiEnum,\r\n  ApiPackage,\r\n  ApiItemKind,\r\n  ApiReleaseTagMixin,\r\n  ApiDocumentedItem,\r\n  ApiClass,\r\n  ReleaseTag,\r\n  ApiStaticMixin,\r\n  ApiPropertyItem,\r\n  ApiInterface,\r\n  Excerpt,\r\n  ApiParameterListMixin,\r\n  ApiReturnTypeMixin,\r\n  ApiNamespace\r\n} from '@microsoft/api-extractor-model';\r\n\r\nimport { CustomDocNodes } from '../../nodes/CustomDocNodeKind';\r\nimport { DocHeading } from '../../nodes/DocHeading';\r\nimport { DocTable } from '../../nodes/DocTable';\r\nimport { DocEmphasisSpan } from '../../nodes/DocEmphasisSpan';\r\nimport { DocTableRow } from '../../nodes/DocTableRow';\r\nimport { DocTableCell } from '../../nodes/DocTableCell';\r\nimport { Utilities } from '../../utils/Utilities';\r\nimport { GrafanaMarkdownEmitter } from '../../markdown/GrafanaMarkdownEmitter';\r\nimport { DocFrontMatter } from '../../nodes/grafana/DocFrontMatter';\r\nimport { PageTitleAppender } from './PageTitleAppender';\r\nimport { HeadingAppender } from './HeadingAppender';\r\nimport { WarningAppender } from './WarningAppender';\r\nimport { ImportAppender } from './ImportAppender';\r\nimport { SignatureAppender } from './SignatureAppender';\r\nimport { SummaryAppender } from './SummaryAppender';\r\n\r\nexport interface IHugoMarkdownDocumenterParameters {\r\n  draft: boolean;\r\n  model: ApiModel;\r\n  output: string\r\n}\r\n\r\n/**\r\n * Renders API documentation in the Markdown file format.\r\n * For more info:  https://en.wikipedia.org/wiki/Markdown\r\n */\r\nexport class HugoMarkdownDocumenter {\r\n  private readonly _apiModel: ApiModel;\r\n  private readonly _tsdocConfiguration: TSDocConfiguration;\r\n  private readonly _markdownEmitter: GrafanaMarkdownEmitter;\r\n  private readonly _outputFolder: string;\r\n  private readonly _generateDraft: boolean;\r\n\r\n  private readonly _pageTitleAppender: PageTitleAppender;\r\n  private readonly _headingAppender: HeadingAppender;\r\n  private readonly _warningAppender: WarningAppender;\r\n  private readonly _importAppender: ImportAppender;\r\n  private readonly _signatureAppender: SignatureAppender;\r\n  private readonly _summaryAppender: SummaryAppender;\r\n\r\n  public constructor(parameters: IHugoMarkdownDocumenterParameters) {\r\n    const { configuration } = CustomDocNodes;\r\n\r\n    this._apiModel = parameters.model;\r\n    this._outputFolder = parameters.output;\r\n    this._generateDraft = parameters.draft;\r\n    this._tsdocConfiguration = configuration;\r\n\r\n    this._markdownEmitter = new GrafanaMarkdownEmitter(this._apiModel);\r\n    this._pageTitleAppender = new PageTitleAppender(configuration);\r\n    this._headingAppender = new HeadingAppender(configuration);\r\n    this._warningAppender = new WarningAppender(configuration);\r\n    this._importAppender = new ImportAppender(configuration);\r\n    this._signatureAppender = new SignatureAppender(configuration);\r\n    this._summaryAppender = new SummaryAppender();\r\n  }\r\n\r\n  public generateFiles(): void {\r\n    this._deleteOldOutputFiles(this._outputFolder);\r\n    this._writeApiItemPage(this._apiModel);\r\n    \r\n    console.log('Successfully generated markdown files');\r\n  }\r\n\r\n  private _writeApiItemPage(apiItem: ApiItem): void {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n    const draft: boolean = this._generateDraft;\r\n\r\n    const output: DocSection = new DocSection({ configuration });\r\n    output.appendNode(new DocFrontMatter({ configuration, apiItem, draft }));\r\n\r\n    this._pageTitleAppender.append(output, apiItem);\r\n    this._writeApiItemContent(output, apiItem, true);\r\n\r\n    const filename: string = path.join(this._outputFolder, this._getFilenameForApiItem(apiItem));\r\n    const stringBuilder: StringBuilder = new StringBuilder();\r\n\r\n    this._markdownEmitter.emit(stringBuilder, output, {\r\n      contextApiItem: apiItem,\r\n      onGetFilenameForApiItem: (apiItemForFilename: ApiItem) => {\r\n        return this._getLinkFilenameForApiItem(apiItemForFilename);\r\n      }\r\n    });\r\n\r\n    FileSystem.writeFile(filename, stringBuilder.toString(), {\r\n      ensureFolderExists: true,\r\n      convertLineEndings: NewlineKind.CrLf\r\n    });\r\n  }\r\n\r\n  private _writeApiItemContent(output: DocSection, apiItem: ApiItem, appendImport: boolean = false): void {\r\n    this._warningAppender.append(output, apiItem);\r\n    this._headingAppender.append(output, apiItem);\r\n    this._summaryAppender.append(output, apiItem);\r\n    this._signatureAppender.append(output, apiItem);\r\n\r\n    if (appendImport) {\r\n      this._importAppender.append(output, apiItem);\r\n    }\r\n\r\n    let appendRemarks: boolean = true;\r\n\r\n    switch (apiItem.kind) {\r\n      case ApiItemKind.Class:\r\n      case ApiItemKind.Interface:\r\n      case ApiItemKind.Namespace:\r\n      case ApiItemKind.Package:\r\n        this._writeRemarksSection(output, apiItem);\r\n        appendRemarks = false;\r\n        break;\r\n    }\r\n\r\n    switch (apiItem.kind) {\r\n      case ApiItemKind.Class:\r\n        this._writeClassTables(output, apiItem as ApiClass);\r\n        break;\r\n      case ApiItemKind.Enum:\r\n        this._writeEnumTables(output, apiItem as ApiEnum);\r\n        break;\r\n      case ApiItemKind.Interface:\r\n        this._writeInterfaceTables(output, apiItem as ApiInterface);\r\n        break;\r\n      case ApiItemKind.Constructor:\r\n      case ApiItemKind.ConstructSignature:\r\n      case ApiItemKind.Method:\r\n      case ApiItemKind.MethodSignature:\r\n      case ApiItemKind.Function:\r\n        this._writeParameterTables(output, apiItem as ApiParameterListMixin);\r\n        this._writeThrowsSection(output, apiItem);\r\n        break;\r\n      case ApiItemKind.Namespace:\r\n        this._writePackageOrNamespaceTables(output, apiItem as ApiNamespace);\r\n        break;\r\n      case ApiItemKind.Model:\r\n        this._writeModelTable(output, apiItem as ApiModel);\r\n        break;\r\n      case ApiItemKind.Package:\r\n        this._writePackageOrNamespaceTables(output, apiItem as ApiPackage);\r\n        break;\r\n      case ApiItemKind.Property:\r\n      case ApiItemKind.PropertySignature:\r\n        break;\r\n      case ApiItemKind.TypeAlias:\r\n        break;\r\n      case ApiItemKind.Variable:\r\n        break;\r\n      default:\r\n        throw new Error('Unsupported API item kind: ' + apiItem.kind);\r\n    }\r\n\r\n    if (appendRemarks) {\r\n        this._writeRemarksSection(output, apiItem);\r\n    }\r\n  };\r\n\r\n  private _writeRemarksSection(output: DocSection, apiItem: ApiItem): void {\r\n    if (apiItem instanceof ApiDocumentedItem) {\r\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\r\n\r\n      if (tsdocComment) {\r\n        // Write the @remarks block\r\n        if (tsdocComment.remarksBlock) {\r\n          output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Remarks' }));\r\n          this._appendSection(output, tsdocComment.remarksBlock.content);\r\n        }\r\n\r\n        // Write the @example blocks\r\n        const exampleBlocks: DocBlock[] = tsdocComment.customBlocks.filter(x => x.blockTag.tagNameWithUpperCase\r\n          === StandardTags.example.tagNameWithUpperCase);\r\n\r\n        let exampleNumber: number = 1;\r\n        for (const exampleBlock of exampleBlocks) {\r\n          const heading: string = exampleBlocks.length > 1 ? `Example ${exampleNumber}` : 'Example';\r\n\r\n          output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: heading }));\r\n\r\n          this._appendSection(output, exampleBlock.content);\r\n\r\n          ++exampleNumber;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _writeThrowsSection(output: DocSection, apiItem: ApiItem): void {\r\n    if (apiItem instanceof ApiDocumentedItem) {\r\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\r\n\r\n      if (tsdocComment) {\r\n        // Write the @throws blocks\r\n        const throwsBlocks: DocBlock[] = tsdocComment.customBlocks.filter(x => x.blockTag.tagNameWithUpperCase\r\n          === StandardTags.throws.tagNameWithUpperCase);\r\n\r\n        if (throwsBlocks.length > 0) {\r\n          const heading: string = 'Exceptions';\r\n          output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: heading }));\r\n\r\n          for (const throwsBlock of throwsBlocks) {\r\n            this._appendSection(output, throwsBlock.content);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * GENERATE PAGE: MODEL\r\n   */\r\n  private _writeModelTable(output: DocSection, apiModel: ApiModel): void {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const packagesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Package', 'Description' ]\r\n    });\r\n\r\n    for (const apiMember of apiModel.members) {\r\n\r\n      const row: DocTableRow = new DocTableRow({ configuration }, [\r\n        this._createTitleCell(apiMember),\r\n        this._createDescriptionCell(apiMember)\r\n      ]);\r\n\r\n      switch (apiMember.kind) {\r\n        case ApiItemKind.Package:\r\n          packagesTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (packagesTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration, title: 'Packages', level: 2 }));\r\n      output.appendNode(packagesTable);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * GENERATE PAGE: PACKAGE or NAMESPACE\r\n   */\r\n  private _writePackageOrNamespaceTables(output: DocSection, apiContainer: ApiPackage | ApiNamespace): void {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const classesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Class', 'Description' ]\r\n    });\r\n\r\n    const enumerationsTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Enumeration', 'Description' ]\r\n    });\r\n\r\n    const functionsTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Function', 'Description' ]\r\n    });\r\n\r\n    const interfacesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Interface', 'Description' ]\r\n    });\r\n\r\n    const namespacesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Namespace', 'Description' ]\r\n    });\r\n\r\n    const variablesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Variable', 'Description' ]\r\n    });\r\n\r\n    const typeAliasesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Type Alias', 'Description' ]\r\n    });\r\n\r\n    const apiMembers: ReadonlyArray<ApiItem> = apiContainer.kind === ApiItemKind.Package ?\r\n      (apiContainer as ApiPackage).entryPoints[0].members\r\n      : (apiContainer as ApiNamespace).members;\r\n\r\n    for (const apiMember of apiMembers) {\r\n\r\n      const row: DocTableRow = new DocTableRow({ configuration }, [\r\n        this._createTitleCell(apiMember),\r\n        this._createDescriptionCell(apiMember)\r\n      ]);\r\n\r\n      switch (apiMember.kind) {\r\n        case ApiItemKind.Class:\r\n          classesTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n\r\n        case ApiItemKind.Enum:\r\n          enumerationsTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n\r\n        case ApiItemKind.Interface:\r\n          interfacesTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n\r\n        case ApiItemKind.Namespace:\r\n          namespacesTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n\r\n        case ApiItemKind.Function:\r\n          functionsTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n\r\n        case ApiItemKind.TypeAlias:\r\n          typeAliasesTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n\r\n        case ApiItemKind.Variable:\r\n          variablesTable.addRow(row);\r\n          this._writeApiItemPage(apiMember);\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (classesTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Classes' }));\r\n      output.appendNode(classesTable);\r\n    }\r\n\r\n    if (enumerationsTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Enumerations' }));\r\n      output.appendNode(enumerationsTable);\r\n    }\r\n    if (functionsTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Functions' }));\r\n      output.appendNode(functionsTable);\r\n    }\r\n\r\n    if (interfacesTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Interfaces' }));\r\n      output.appendNode(interfacesTable);\r\n    }\r\n\r\n    if (namespacesTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Namespaces' }));\r\n      output.appendNode(namespacesTable);\r\n    }\r\n\r\n    if (variablesTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Variables' }));\r\n      output.appendNode(variablesTable);\r\n    }\r\n\r\n    if (typeAliasesTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Type Aliases' }));\r\n      output.appendNode(typeAliasesTable);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * GENERATE PAGE: CLASS\r\n   */\r\n  private _writeClassTables(output: DocSection, apiClass: ApiClass): void {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const eventsTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Property', 'Modifiers', 'Type', 'Description' ]\r\n    });\r\n\r\n    const constructorsTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Constructor', 'Modifiers', 'Description' ]\r\n    });\r\n\r\n    const constructorsSection: DocSection = new DocSection({ configuration });\r\n\r\n    const propertiesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Property', 'Modifiers', 'Type', 'Description' ]\r\n    });\r\n\r\n    const propertiesSection: DocSection = new DocSection({ configuration });\r\n\r\n    const methodsTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Method', 'Modifiers', 'Description' ]\r\n    });\r\n\r\n    const methodsSection: DocSection = new DocSection({ configuration });\r\n\r\n    for (const apiMember of apiClass.members) {\r\n\r\n      switch (apiMember.kind) {\r\n        case ApiItemKind.Constructor: {\r\n          constructorsTable.addRow(\r\n            new DocTableRow({ configuration }, [\r\n              this._createTitleCell(apiMember),\r\n              this._createModifiersCell(apiMember),\r\n              this._createDescriptionCell(apiMember)\r\n            ])\r\n          );\r\n\r\n          this._writeApiItemContent(constructorsSection, apiMember);\r\n          break;\r\n        }\r\n        case ApiItemKind.Method: {\r\n          methodsTable.addRow(\r\n            new DocTableRow({ configuration }, [\r\n              this._createTitleCell(apiMember),\r\n              this._createModifiersCell(apiMember),\r\n              this._createDescriptionCell(apiMember)\r\n            ])\r\n          );\r\n\r\n          this._writeApiItemContent(methodsSection, apiMember);\r\n          break;\r\n        }\r\n        case ApiItemKind.Property: {\r\n\r\n          if ((apiMember as ApiPropertyItem).isEventProperty) {\r\n            eventsTable.addRow(\r\n              new DocTableRow({ configuration }, [\r\n                this._createTitleCell(apiMember),\r\n                this._createModifiersCell(apiMember),\r\n                this._createPropertyTypeCell(apiMember),\r\n                this._createDescriptionCell(apiMember)\r\n              ])\r\n            );\r\n          } else {\r\n            propertiesTable.addRow(\r\n              new DocTableRow({ configuration }, [\r\n                this._createTitleCell(apiMember),\r\n                this._createModifiersCell(apiMember),\r\n                this._createPropertyTypeCell(apiMember),\r\n                this._createDescriptionCell(apiMember)\r\n              ])\r\n            );\r\n          }\r\n\r\n          this._writeApiItemContent(propertiesSection, apiMember);\r\n          break;\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    if (eventsTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Events'));\r\n      output.appendNode(eventsTable);\r\n    }\r\n\r\n    if (constructorsTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Constructors'));\r\n      output.appendNode(constructorsTable);\r\n    }\r\n\r\n    if (propertiesTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Properties'));\r\n      output.appendNode(propertiesTable);\r\n    }\r\n\r\n    if (methodsTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Methods'));\r\n      output.appendNode(methodsTable);\r\n    }\r\n\r\n    this._appendSection(output, constructorsSection);\r\n    this._appendSection(output, propertiesSection);\r\n    this._appendSection(output, methodsSection);\r\n  }\r\n\r\n  /**\r\n   * GENERATE PAGE: ENUM\r\n   */\r\n  private _writeEnumTables(output: DocSection, apiEnum: ApiEnum): void {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const enumMembersTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Member', 'Value', 'Description' ]\r\n    });\r\n\r\n    for (const apiEnumMember of apiEnum.members) {\r\n      enumMembersTable.addRow(\r\n        new DocTableRow({ configuration }, [\r\n\r\n          new DocTableCell({ configuration }, [\r\n            new DocParagraph({ configuration }, [\r\n              new DocPlainText({ configuration, text: Utilities.getConciseSignature(apiEnumMember) })\r\n            ])\r\n          ]),\r\n\r\n          new DocTableCell({ configuration }, [\r\n            new DocParagraph({ configuration }, [\r\n              new DocCodeSpan({ configuration, code: apiEnumMember.initializerExcerpt.text })\r\n            ])\r\n          ]),\r\n\r\n          this._createDescriptionCell(apiEnumMember)\r\n        ])\r\n      );\r\n    }\r\n\r\n    if (enumMembersTable.rows.length > 0) {\r\n      output.appendNode(new DocHeading({ configuration: this._tsdocConfiguration, title: 'Enumeration Members' }));\r\n      output.appendNode(enumMembersTable);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * GENERATE PAGE: INTERFACE\r\n   */\r\n  private _writeInterfaceTables(output: DocSection, apiClass: ApiInterface): void {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const eventsTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Property', 'Type', 'Description' ]\r\n    });\r\n\r\n    const propertiesTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Property', 'Type', 'Description' ]\r\n    });\r\n\r\n    const properitesSection: DocSection = new DocSection({ configuration });\r\n\r\n    const methodsTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Method', 'Description' ]\r\n    });\r\n\r\n    const methodsSection: DocSection = new DocSection({ configuration });\r\n\r\n    for (const apiMember of apiClass.members) {\r\n\r\n      switch (apiMember.kind) {\r\n        case ApiItemKind.ConstructSignature:\r\n        case ApiItemKind.MethodSignature: {\r\n          methodsTable.addRow(\r\n            new DocTableRow({ configuration }, [\r\n              this._createTitleCell(apiMember),\r\n              this._createDescriptionCell(apiMember)\r\n            ])\r\n          );\r\n\r\n          this._writeApiItemContent(methodsSection, apiMember);\r\n          break;\r\n        }\r\n        case ApiItemKind.PropertySignature: {\r\n\r\n          if ((apiMember as ApiPropertyItem).isEventProperty) {\r\n            eventsTable.addRow(\r\n              new DocTableRow({ configuration }, [\r\n                this._createTitleCell(apiMember),\r\n                this._createPropertyTypeCell(apiMember),\r\n                this._createDescriptionCell(apiMember)\r\n              ])\r\n            );\r\n          } else {\r\n            propertiesTable.addRow(\r\n              new DocTableRow({ configuration }, [\r\n                this._createTitleCell(apiMember),\r\n                this._createPropertyTypeCell(apiMember),\r\n                this._createDescriptionCell(apiMember)\r\n              ])\r\n            );\r\n          }\r\n\r\n          this._writeApiItemContent(properitesSection, apiMember);\r\n          break;\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    if (eventsTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Events'));\r\n      output.appendNode(eventsTable);\r\n    }\r\n\r\n    if (propertiesTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Properties'));\r\n      output.appendNode(propertiesTable);\r\n    }\r\n\r\n    if (methodsTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Methods'));\r\n      output.appendNode(methodsTable);\r\n    }\r\n\r\n    this._appendSection(output, properitesSection);\r\n    this._appendSection(output, methodsSection);\r\n  }\r\n\r\n  /**\r\n   * GENERATE PAGE: FUNCTION-LIKE\r\n   */\r\n  private _writeParameterTables(output: DocSection, apiParameterListMixin: ApiParameterListMixin): void {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const parametersTable: DocTable = new DocTable({ configuration,\r\n      headerTitles: [ 'Parameter', 'Type', 'Description' ]\r\n    });\r\n\r\n    for (const apiParameter of apiParameterListMixin.parameters) {\r\n      const parameterDescription: DocSection = new DocSection({ configuration } );\r\n      if (apiParameter.tsdocParamBlock) {\r\n        this._appendSection(parameterDescription, apiParameter.tsdocParamBlock.content);\r\n      }\r\n\r\n      parametersTable.addRow(\r\n        new DocTableRow({ configuration }, [\r\n          new DocTableCell({configuration}, [\r\n            new DocParagraph({ configuration }, [\r\n              new DocPlainText({ configuration, text: apiParameter.name })\r\n            ])\r\n          ]),\r\n          new DocTableCell({configuration}, [\r\n            new DocParagraph({ configuration }, [\r\n              new DocCodeSpan({ configuration, code: apiParameter.parameterTypeExcerpt.text })\r\n            ])\r\n          ]),\r\n          new DocTableCell({configuration}, parameterDescription.nodes)\r\n        ])\r\n      );\r\n    }\r\n\r\n    if (parametersTable.rows.length > 0) {\r\n      output.appendNode(this._writeBoldText(configuration, 'Parameters'));\r\n      output.appendNode(parametersTable);\r\n    }\r\n\r\n    if (ApiReturnTypeMixin.isBaseClassOf(apiParameterListMixin)) {\r\n      const returnTypeExcerpt: Excerpt = apiParameterListMixin.returnTypeExcerpt;\r\n      output.appendNode(\r\n        new DocParagraph({ configuration }, [\r\n          new DocEmphasisSpan({ configuration, bold: true}, [\r\n            new DocPlainText({ configuration, text: 'Returns:' })\r\n          ])\r\n        ])\r\n      );\r\n\r\n      output.appendNode(\r\n        new DocParagraph({ configuration }, [\r\n          new DocCodeSpan({ configuration, code: returnTypeExcerpt.text.trim() || '(not declared)' })\r\n        ])\r\n      );\r\n\r\n      if (apiParameterListMixin instanceof ApiDocumentedItem) {\r\n        if (apiParameterListMixin.tsdocComment && apiParameterListMixin.tsdocComment.returnsBlock) {\r\n          this._appendSection(output, apiParameterListMixin.tsdocComment.returnsBlock.content);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _createTitleCell(apiItem: ApiItem): DocTableCell {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    return new DocTableCell({ configuration }, [\r\n      new DocParagraph({ configuration }, [\r\n        new DocLinkTag({\r\n          configuration,\r\n          tagName: '@link',\r\n          linkText: Utilities.getGrafanaConciseSignature(apiItem),\r\n          urlDestination: this._getUrlDestination(apiItem)\r\n        })\r\n      ])\r\n    ]);\r\n  }\r\n\r\n\r\n  private _getUrlDestination(apiItem: ApiItem): string {\r\n    switch (apiItem.kind) {\r\n      case ApiItemKind.Method:\r\n      case ApiItemKind.MethodSignature: {\r\n        const link: string = Utilities.getSafeFilenameForName(apiItem.displayName);\r\n        return `#${link}-method`;\r\n      }\r\n\r\n      case ApiItemKind.Package: {\r\n        const signature: string = PackageName.getUnscopedName(apiItem.displayName);\r\n        const link: string = Utilities.getSafeFilenameForName(signature);\r\n        return `./${link}/`;\r\n      }\r\n\r\n      case ApiItemKind.Property:\r\n      case ApiItemKind.PropertySignature: {\r\n        const link: string = Utilities.getSafeFilenameForName(apiItem.displayName);\r\n        return `#${link}-property`;\r\n      }\r\n\r\n      case ApiItemKind.ConstructSignature:\r\n      case ApiItemKind.Constructor: {\r\n        const signature: string = Utilities.getGrafanaConciseSignature(apiItem);\r\n        const link: string = Utilities.getHeaderLinkForName(signature);\r\n        return `#${link}`;\r\n      }\r\n\r\n      case ApiItemKind.TypeAlias:\r\n      case ApiItemKind.Enum:\r\n      case ApiItemKind.Variable:\r\n      case ApiItemKind.Function:\r\n      case ApiItemKind.Interface:\r\n      case ApiItemKind.Namespace:\r\n      case ApiItemKind.Class: {\r\n        const link: string = Utilities.getSafeFilenameForName(apiItem.displayName);\r\n        return `./${link}/`;\r\n      }\r\n\r\n      default:\r\n        return this._getLinkFilenameForApiItem(apiItem)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This generates a DocTableCell for an ApiItem including the summary section and \"(BETA)\" annotation.\r\n   *\r\n   * @remarks\r\n   * We mostly assume that the input is an ApiDocumentedItem, but it's easier to perform this as a runtime\r\n   * check than to have each caller perform a type cast.\r\n   */\r\n  private _createDescriptionCell(apiItem: ApiItem): DocTableCell {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const section: DocSection = new DocSection({ configuration });\r\n\r\n    if (ApiReleaseTagMixin.isBaseClassOf(apiItem)) {\r\n      if (apiItem.releaseTag === ReleaseTag.Beta) {\r\n        section.appendNodesInParagraph([\r\n          new DocEmphasisSpan({ configuration, bold: true, italic: true }, [\r\n            new DocPlainText({ configuration, text: '(BETA)' })\r\n          ]),\r\n          new DocPlainText({ configuration, text: ' ' })\r\n        ]);\r\n      }\r\n    }\r\n\r\n    if (apiItem instanceof ApiDocumentedItem) {\r\n      if (apiItem.tsdocComment !== undefined) {\r\n        this._appendAndMergeSection(section, apiItem.tsdocComment.summarySection);\r\n      }\r\n    }\r\n\r\n    return new DocTableCell({ configuration }, section.nodes);\r\n  }\r\n\r\n  private _createModifiersCell(apiItem: ApiItem): DocTableCell {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const section: DocSection = new DocSection({ configuration });\r\n\r\n    if (ApiStaticMixin.isBaseClassOf(apiItem)) {\r\n      if (apiItem.isStatic) {\r\n        section.appendNodeInParagraph(new DocCodeSpan({ configuration, code: 'static' }));\r\n      }\r\n    }\r\n\r\n    return new DocTableCell({ configuration }, section.nodes);\r\n  }\r\n\r\n  private _createPropertyTypeCell(apiItem: ApiItem): DocTableCell {\r\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\r\n\r\n    const section: DocSection = new DocSection({ configuration });\r\n\r\n    if (apiItem instanceof ApiPropertyItem) {\r\n      section.appendNodeInParagraph(new DocCodeSpan({ configuration, code: apiItem.propertyTypeExcerpt.text }));\r\n    }\r\n\r\n    return new DocTableCell({ configuration }, section.nodes);\r\n  }\r\n\r\n  private _appendSection(output: DocSection, docSection: DocSection): void {\r\n    for (const node of docSection.nodes) {\r\n      output.appendNode(node);\r\n    }\r\n  }\r\n\r\n  private _appendAndMergeSection(output: DocSection, docSection: DocSection): void {\r\n    let firstNode: boolean = true;\r\n    for (const node of docSection.nodes) {\r\n      if (firstNode) {\r\n        if (node.kind === DocNodeKind.Paragraph) {\r\n          output.appendNodesInParagraph(node.getChildNodes());\r\n          firstNode = false;\r\n          continue;\r\n        }\r\n      }\r\n      firstNode = false;\r\n\r\n      output.appendNode(node);\r\n    }\r\n  }\r\n\r\n  private _writeBoldText(configuration: TSDocConfiguration, text: string): DocParagraph {\r\n      return new DocParagraph({ configuration }, [\r\n        new DocEmphasisSpan({ configuration, bold: true}, [\r\n          new DocPlainText({ configuration, text })\r\n        ])\r\n      ])\r\n  }\r\n\r\n  private _getFilenameForApiItem(apiItem: ApiItem): string {\r\n    if (apiItem.kind === ApiItemKind.Model) {\r\n      return '_index.md';\r\n    }\r\n\r\n    if (apiItem.kind === ApiItemKind.Package) {\r\n      const unscopedName: string = PackageName.getUnscopedName(apiItem.displayName);\r\n      const baseName: string = Utilities.getSafeFilenameForName(unscopedName);\r\n\r\n      return `${baseName}/_index.md`;\r\n    }\r\n\r\n    let baseName: string = '';\r\n    for (const hierarchyItem of apiItem.getHierarchy()) {\r\n      // For overloaded methods, add a suffix such as \"MyClass.myMethod_2\".\r\n      let qualifiedName: string = Utilities.getSafeFilenameForName(hierarchyItem.displayName);\r\n      if (ApiParameterListMixin.isBaseClassOf(hierarchyItem)) {\r\n        if (hierarchyItem.overloadIndex > 1) {\r\n          // Subtract one for compatibility with earlier releases of API Documenter.\r\n          // (This will get revamped when we fix GitHub issue #1308)\r\n          qualifiedName += `_${hierarchyItem.overloadIndex - 1}`;\r\n        }\r\n      }\r\n\r\n      switch (hierarchyItem.kind) {\r\n        case ApiItemKind.Model:\r\n        case ApiItemKind.EntryPoint:\r\n          break;\r\n        case ApiItemKind.Package:\r\n          baseName = Utilities.getSafeFilenameForName(PackageName.getUnscopedName(hierarchyItem.displayName));\r\n          break;\r\n        default:\r\n          baseName += '/' + qualifiedName;\r\n          break;\r\n      }\r\n    }\r\n    return baseName + '.md';\r\n  }\r\n\r\n  private _getLinkFilenameForApiItem(apiItem: ApiItem): string {\r\n    return './' + this._getFilenameForApiItem(apiItem);\r\n  }\r\n\r\n  private _deleteOldOutputFiles(outputFolder: string): void {\r\n    console.log('Deleting old output from ' + outputFolder);\r\n    FileSystem.ensureEmptyFolder(outputFolder);\r\n  }\r\n}\r\n"]}