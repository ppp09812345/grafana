{"version":3,"file":"ImportAppender.js","sourceRoot":"","sources":["../../../src/documenters/grafana/ImportAppender.ts"],"names":[],"mappings":";;AAAA,4CAAiF;AAEjF,qDAAkD;AAClD,yDAAsD;AAEtD,MAAa,cAAc;IAIzB,YAAmB,aAAiC;QAClD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,mCAAgB,CAAC,aAAa,CAAC,CAAC;IAC/D,CAAC;IAEM,MAAM,CAAC,MAAkB,EAAE,OAAgB;QAChD,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE;YACrC,OAAO;SACR;QAED,MAAM,IAAI,GAAuB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE/D,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,UAAU,CAAC,IAAI,qBAAa,CAAC;YAClC,aAAa,EAAE,IAAI,CAAC,cAAc;YAClC,IAAI;YACJ,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC,CAAC;IACN,CAAC;IAEO,kBAAkB,CAAC,OAAgB;QACzC,MAAM,IAAI,GAAoB,OAA0B,CAAC;QACzD,OAAO,IAAI,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC;IACjD,CAAC;IAEO,eAAe,CAAC,OAAwB;QAC9C,MAAM,WAAW,GAA2B,OAAO,CAAC,oBAAoB,EAAE,CAAC;QAE3E,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO;SACR;QAED,OAAO,OAAO,CAAC,0BAA0B,EAAE;aACxC,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;YACzB,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;aAC7D;YACD,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC;aACD,IAAI,CAAC,IAAI,CAAC,CAAC;IAChB,CAAC;IAEO,iBAAiB,CAAC,IAAY,EAAE,WAAmB;QACzD,MAAM,WAAW,GAAW,qBAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1D,MAAM,WAAW,GAAW,qBAAS,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACjE,OAAO,WAAW,WAAW,QAAQ,WAAW,GAAG,CAAC;IACtD,CAAC;IAEO,eAAe,CAAC,IAAY,EAAE,WAAmB;QACvD,MAAM,WAAW,GAAW,qBAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1D,OAAO,YAAY,WAAW,YAAY,WAAW,IAAI,CAAC;IAC5D,CAAC;CACF;AA7DD,wCA6DC;AAAA,CAAC","sourcesContent":["import { DocSection, TSDocConfiguration, DocFencedCode } from '@microsoft/tsdoc';\r\nimport { ApiItem, ApiDeclaredItem, ApiPackage } from '@microsoft/api-extractor-model';\r\nimport { Utilities } from '../../utils/Utilities';\r\nimport { BoldTextAppender } from './BoldTextAppender';\r\n\r\nexport class ImportAppender {\r\n  private readonly _configuration: TSDocConfiguration;\r\n  private readonly _boldTextAppender: BoldTextAppender;\r\n\r\n  public constructor(configuration: TSDocConfiguration) {\r\n    this._configuration = configuration;\r\n    this._boldTextAppender = new BoldTextAppender(configuration);\r\n  }\r\n\r\n  public append(output: DocSection, apiItem: ApiItem): void {\r\n    if (!this._isApiDeclaredItem(apiItem)) {\r\n      return;\r\n    }\r\n\r\n    const code: string | undefined = this._importFromItem(apiItem);\r\n\r\n    if (!code) {\r\n      return;\r\n    }\r\n\r\n    this._boldTextAppender.append(output, 'Import');\r\n    output.appendNode(new DocFencedCode({\r\n      configuration: this._configuration,\r\n      code,\r\n      language: 'typescript'\r\n    }));\r\n  }\r\n\r\n  private _isApiDeclaredItem(apiItem: ApiItem): apiItem is ApiDeclaredItem {\r\n    const node: ApiDeclaredItem = apiItem as ApiDeclaredItem;\r\n    return node && node.buildExcerpt !== undefined;\r\n  }\r\n\r\n  private _importFromItem(apiItem: ApiDeclaredItem): string | undefined {\r\n    const packageItem: ApiPackage | undefined = apiItem.getAssociatedPackage();\r\n  \r\n    if (!packageItem) {\r\n      return;\r\n    }\r\n  \r\n    return apiItem.getScopedNameWithinPackage()\r\n      .split('.')\r\n      .map((value, index, all) => {\r\n        if (index === 0) {\r\n          return this._generateImport(value, packageItem.displayName);\r\n        }\r\n        return this._generateDestruct(value, all[index - 1]);\r\n      })\r\n      .join('\\n');\r\n  }\r\n\r\n  private _generateDestruct(path: string, displayName: string): string {\r\n    const escapedPath: string = Utilities.getImportName(path);\r\n    const escapedName: string = Utilities.getImportName(displayName);\r\n    return `const { ${escapedPath} } = ${escapedName};`;\r\n  }\r\n\r\n  private _generateImport(path: string, displayName: string): string {\r\n    const escapedPath: string = Utilities.getImportName(path);\r\n    return `import { ${escapedPath} } from '${displayName}';`;\r\n  }\r\n};"]}