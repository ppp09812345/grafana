{"version":3,"file":"WarningAppender.js","sourceRoot":"","sources":["../../../src/documenters/grafana/WarningAppender.ts"],"names":[],"mappings":";;AAAA,4CAA0G;AAC1G,wEAA4G;AAC5G,uDAAoD;AAEpD,MAAM,QAAQ,GAAW,iEAAiE;MACpF,uFAAuF,CAAC;AAE9F,MAAM,UAAU,GAAW,EAAE,CAAC;AAG9B,MAAa,eAAe;IAG1B,YAAmB,aAAiC;QAClD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACtC,CAAC;IAEM,MAAM,CAAC,MAAkB,EAAE,OAAgB;QAChD,MAAM,OAAO,GAAuB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAClE,MAAM,aAAa,GAAuB,IAAI,CAAC,cAAc,CAAC;QAE9D,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;SACR;QAED,MAAM,CAAC,UAAU,CAAC,IAAI,uBAAU,CAAC,EAAE,aAAa,EAAE,EAAE;YAChD,IAAI,oBAAY,CAAC,EAAE,aAAa,EAAE,EAAE;gBAClC,IAAI,oBAAY,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;aACnD,CAAC;SACH,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,OAAgB;QACtC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;YAC/B,OAAO,UAAU,CAAC;SACnB;QAED,IAAI,wCAAkB,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;YAC3C,QAAQ,OAAO,CAAC,UAAU,EAAE;gBAC1B,KAAK,gCAAU,CAAC,KAAK,CAAC;gBACtB,KAAK,gCAAU,CAAC,IAAI,CAAC;gBACrB,KAAK,gCAAU,CAAC,IAAI;oBAClB,OAAO,QAAQ,CAAC;aACnB;SACJ;IACH,CAAC;IAEO,aAAa,CAAC,OAAgB;QACpC,IAAI,OAAO,YAAY,uCAAiB,EAAE;YACxC,MAAM,YAAY,GAA2B,OAAO,CAAC,YAAY,CAAC;YAElE,IAAI,CAAC,YAAY,EAAE;gBACjB,OAAO,KAAK,CAAC;aACd;YAED,IAAI,YAAY,CAAC,eAAe,EAAE;gBAChC,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AArDD,0CAqDC;AAAA,CAAC","sourcesContent":["import { DocSection, TSDocConfiguration, DocParagraph, DocPlainText, DocComment } from '@microsoft/tsdoc';\r\nimport { ApiItem, ApiReleaseTagMixin, ReleaseTag, ApiDocumentedItem } from '@microsoft/api-extractor-model';\r\nimport { DocNoteBox } from '../../nodes/DocNoteBox';\r\n\r\nconst unstable: string = 'This API is provided as a preview for developers and may change'\r\n    + ' based on feedback that we receive.  Do not use this API in a production environment.';\r\n\r\nconst deprecated: string = '';\r\n\r\n\r\nexport class WarningAppender {\r\n  private readonly _configuration: TSDocConfiguration;\r\n\r\n  public constructor(configuration: TSDocConfiguration) {\r\n    this._configuration = configuration;\r\n  }\r\n\r\n  public append(output: DocSection, apiItem: ApiItem): void {\r\n    const warning: string | undefined = this._warningForItem(apiItem);\r\n    const configuration: TSDocConfiguration = this._configuration;\r\n\r\n    if (!warning) {\r\n      return;\r\n    }\r\n\r\n    output.appendNode(new DocNoteBox({ configuration }, [\r\n        new DocParagraph({ configuration }, [\r\n          new DocPlainText({ configuration, text: warning })\r\n        ])\r\n      ])\r\n    );\r\n  }\r\n\r\n  private _warningForItem(apiItem: ApiItem): string | undefined {\r\n    if (this._isDeprecated(apiItem)) {\r\n      return deprecated;\r\n    }\r\n  \r\n    if (ApiReleaseTagMixin.isBaseClassOf(apiItem)) {\r\n        switch (apiItem.releaseTag) {\r\n          case ReleaseTag.Alpha:\r\n          case ReleaseTag.Beta:\r\n          case ReleaseTag.None:\r\n            return unstable;\r\n        }\r\n    }\r\n  }\r\n  \r\n  private _isDeprecated(apiItem: ApiItem): boolean {\r\n    if (apiItem instanceof ApiDocumentedItem) {\r\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\r\n  \r\n      if (!tsdocComment) {\r\n        return false;\r\n      }\r\n  \r\n      if (tsdocComment.deprecatedBlock) {\r\n        return true;\r\n      }\r\n    }\r\n  \r\n    return false;\r\n  }\r\n};"]}