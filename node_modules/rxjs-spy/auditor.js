"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Auditor = (function () {
    function Auditor(duration) {
        this.duration = duration;
        this.queue_ = [];
    }
    Auditor.prototype.audit = function (source, task) {
        var _a = this, duration = _a.duration, queue_ = _a.queue_;
        if (duration <= 0) {
            task(0);
        }
        else {
            var queued = {
                ignored: 0,
                source: source,
                task: task,
                timestamp: Date.now()
            };
            var index = queue_.findIndex(function (q) { return q.source === source; });
            if (index !== -1) {
                var _b = queue_[index], ignored = _b.ignored, timestamp = _b.timestamp;
                queued.ignored += ignored + 1;
                queued.timestamp = timestamp;
                queue_.splice(index, 1);
            }
            queue_.push(queued);
            this.wait_();
        }
    };
    Auditor.prototype.wait_ = function () {
        var _this = this;
        var _a = this, duration = _a.duration, queue_ = _a.queue_;
        if ((this.timeoutId_ === undefined) && (queue_.length > 0)) {
            var queued = queue_[0];
            this.timeoutId_ = setTimeout(function () {
                var before = Date.now() - duration;
                while ((queue_.length > 0) && (queue_[0].timestamp <= before)) {
                    var dequeued = queue_.shift();
                    dequeued.task(dequeued.ignored);
                }
                _this.timeoutId_ = undefined;
                _this.wait_();
            }, Math.max(0, queued.timestamp + duration - Date.now()));
        }
    };
    return Auditor;
}());
exports.Auditor = Auditor;
