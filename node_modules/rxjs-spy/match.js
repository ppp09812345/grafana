"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var identify_1 = require("./identify");
var subscription_ref_1 = require("./subscription-ref");
var util_1 = require("./util");
function matches(arg, match, value) {
    var observable;
    var subscriber = undefined;
    var subscription = undefined;
    if (util_1.isObservable(arg)) {
        observable = arg;
    }
    else {
        observable = arg.observable;
        subscriber = arg.subscriber;
        subscription = subscription_ref_1.isSubscriptionRef(arg) ? arg.subscription : undefined;
    }
    if (util_1.isObservable(match)) {
        return observable === match;
    }
    var observableId = identify_1.identify(observable);
    var subscriberId = subscriber ? identify_1.identify(subscriber) : undefined;
    var subscriptionId = subscription ? identify_1.identify(subscription) : undefined;
    var tag = value || read(observable);
    if (typeof match === "function") {
        return match(tag, observable);
    }
    if (typeof match === "string") {
        return (match === observableId) || (match === subscriberId) || (match === subscriptionId) || (match === tag);
    }
    if (tag === undefined) {
        return false;
    }
    return match.test(tag);
}
exports.matches = matches;
function read(observable) {
    var operator = observable["operator"];
    if (!operator) {
        return undefined;
    }
    var tag = operator["tag"];
    if (!tag) {
        return undefined;
    }
    return tag;
}
exports.read = read;
function toString(match) {
    if (util_1.isObservable(match)) {
        return "[Observable]";
    }
    else if (typeof match === "function") {
        return "[Function]";
    }
    return match.toString();
}
exports.toString = toString;
